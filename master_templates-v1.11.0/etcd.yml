apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    k8s-app: etcd-server
  name: etcd-server
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - /usr/local/bin/etcd 1>>/var/log/etcd.log 2>&1
    env:
    - name: ETCD_NAME
      value: ${ name }
    - name: ETCD_DISCOVERY_SRV
      value: ${ etcd_discovery }
    - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
      value: http://${ node }.${ etcd_discovery }:2380
    - name: ETCD_INITIAL_CLUSTER_TOKEN
      value: ${ name }-etcd
    - name: ETCD_INITIAL_CLUSTER_STATE
      value: new
    - name: ETCD_ADVERTISE_CLIENT_URLS
      value: http://${ node }.${ etcd_discovery }:4001
    - name: ETCD_LISTEN_CLIENT_URLS
      value: http://0.0.0.0:4001
    - name: ETCD_LISTEN_PEER_URLS
      value: http://0.0.0.0:2380
    - name: ETCD_DATA_DIR
      value: /var/etcd/data
    image: ${ etcd_image }:${ etcd_tag }
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 4001
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: etcd-container
    ports:
    - containerPort: 2380
      hostPort: 2380
      name: serverport
    - containerPort: 4001
      hostPort: 4001
      name: clientport
    resources:
      requests:
        cpu: 200m
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: etcssl
      readOnly: true
    - mountPath: /var/etcd/data
      name: varetcdata
    - mountPath: /var/log
      name: varlogetcd
  hostNetwork: true
  volumes:
  - hostPath:
      path: /usr/share/ca-certificates
    name: etcssl
  - hostPath:
      path: /var/etcd/data
    name: varetcdata
  - hostPath:
      path: /var/log
    name: varlogetcd
status: {}
